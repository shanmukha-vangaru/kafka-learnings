spring:
  profiles:
    active: "confluent-cloud"
  config:
    import: optional:file:.env[.properties]
  kafka:
    streams:
      application-id: spring-boot-kafka
      application-server: localhost:8080
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
      properties:
        schema.registry.url: http://localhost:8081
        allow.auto.create.topics: false
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
      properties:
        derive.type: true
        allow.auto.create.topics: false
        schema.registry.url: http://localhost:8081
    consumers:
      user:
        group.id: user-0
        topics: user

---

spring:
  config:
    activate:
      on-profile: confluent-cloud

  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS}
    topics:
      replication-factor: 3
    properties:
      sasl:
        mechanism: PLAIN
        jaas.config: ${JASS_CONFIG}
      security.protocol: SASL_SSL
      basic:
        auth:
          credentials.source: USER_INFO
          user.info: ${USER_INFO}
    producer:
      properties:
        schema.registry.url: ${SCHEMA_REGISTRY_URL}
    consumer:
      properties:
        schema.registry.url: ${SCHEMA_REGISTRY_URL}